install.packages("ggmap")
rm(list=ls(all=TRUE))
library(tidyverse)
library(sp)
library(rgdal)
library(tmap)
lambertequalarea <- CRS("+init=EPSG:4832")
crs.longlat <- CRS("+init=EPSG:4326")
crs.longlat <- CRS("+init=EPSG:9835")
epsg <- make_epsg()
help(rgdal)
geocron1500 <- readOGR(dsn = "/Users/xsunde/Dropbox/Governance thro history/Combined_Euratlas_Geacron_Data/", layer = "1500")
gArea(geocron1500)
rm(list=ls(all=TRUE))
library(tidyverse)
library(sp)
library(rgdal)
library(tmap)
lambertequalarea <- CRS("+init=EPSG:4")
crs.longlat <- CRS("+init=EPSG:4326")
geocron1500 <- readOGR(dsn = "/Users/xsunde/Dropbox/Governance thro history/Combined_Euratlas_Geacron_Data/", layer = "1500")
geocron1600 <- readOGR(dsn = "/Users/xsunde/Dropbox/Governance thro history/Combined_Euratlas_Geacron_Data/", layer = "1600")
geocron1700 <- readOGR(dsn = "/Users/xsunde/Dropbox/Governance thro history/Combined_Euratlas_Geacron_Data/", layer = "1700")
df.gea.1500 <- as.data.frame(geacron1500) %>%
mutate(km2_1000 = gArea(geacron1500) / 1000,
ln_km2 = log(km2_1000))
df.gea.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_1000 = gArea(geocron1500) / 1000,
ln_km2 = log(km2_1000))
df.gea.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_1000 = area(geocron1500) / 1000,
ln_km2 = log(km2_1000))
library(gdistance)
df.gea.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_1000 = area(geocron1500) / 1000,
ln_km2 = log(km2_1000))
View(df.gea.1500)
df.gea.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_1000 = area(geocron1500) / 1000,
ln_km2 = log(km2_1000)) %>%
dplyr::select(short_name, km2_1000) %>%
arrange(desc(km2_1000)) %>%
top_n(50)
View(df.gea.1500)
df.gea.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_mill = area(geocron1500) / 1000000,
ln_km2 = log(km2_1000)) %>%
dplyr::select(short_name, km2_1000) %>%
arrange(desc(km2_1000)) %>%
top_n(50)
df.gea.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_mill = area(geocron1500) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(50)
View(df.gea.1500)
help(area)
plot(geocron1500)
df.geo.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_mill = area(geocron1500) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1500,
rank = 1:25)
df.geo.1600 <- as.data.frame(geocron1600) %>%
mutate(km2_mill = area(geocron1600) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1600,
rank = 1:25)
df.geo.1700 <- as.data.frame(geocron1700) %>%
mutate(km2_mill = area(geocron1700) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1700,
rank = 1:25)
df.geo.1600 <- as.data.frame(geocron1600) %>%
mutate(km2_mill = area(geocron1600) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1600,
rank = 1:25)
df.geo.1600 <- as.data.frame(geocron1600) %>%
mutate(km2_mill = area(geocron1600) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25)
View(df.geo.1600)
df.geo.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_mill = area(geocron1500) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1500,
rank = 1:25)
df.geo.1600 <- as.data.frame(geocron1600) %>%
mutate(km2_mill = area(geocron1600) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1600,
rank = 1:26)
df.geo.1700 <- as.data.frame(geocron1700) %>%
mutate(km2_mill = area(geocron1700) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1700,
rank = 1:25)
df.geo.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_mill = area(geocron1500) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1500,
rank1500 = 1:25)
df.geo.1600 <- as.data.frame(geocron1600) %>%
mutate(km2_mill = area(geocron1600) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1600,
rank1600 = 1:26)
df.geo.1700 <- as.data.frame(geocron1700) %>%
mutate(km2_mill = area(geocron1700) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1700,
rank1700 = 1:25)
df.combined <- rbind(df.geo1500, df.geo.1600, df.geo1700)
df.geo.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_mill = area(geocron1500) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1500,
rank = 1:25)
df.geo.1600 <- as.data.frame(geocron1600) %>%
mutate(km2_mill = area(geocron1600) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1600,
rank = 1:26)
df.geo.1700 <- as.data.frame(geocron1700) %>%
mutate(km2_mill = area(geocron1700) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1700,
rank = 1:25)
df.combined <- rbind(df.geo1500, df.geo.1600, df.geo1700)
df.combined <- rbind(df.geo.1500, df.geo.1600, df.geo1700)
df.combined <- rbind(df.geo.1500, df.geo.1600, df.geo.1700)
View(df.combined)
df.combined <- rbind(df.geo.1500, df.geo.1600, df.geo.1700) %>%
group_by(short_name) %>%
summarize(n = n(), area = mean(km2_mill))
View(df.combined)
write.xslx(df.combined, file = "/Users/xsunde/Dropbox/Governance thro history/Evaluation/geocrontop25_150016001700.xslx")
write.xlsx(df.combined, file = "/Users/xsunde/Dropbox/Governance thro history/Evaluation/geocrontop25_150016001700.xlsx")
install.packages("xlsx")
library(xlsx)
write.csv(df.combined, file = "/Users/xsunde/Dropbox/Governance thro history/Evaluation/geocrontop25_150016001700.csv")
tm_shape(geocron1500) +
tm_borders(col = "red") +
tm_layout(title = "1500")
map1500 <- tm_shape(geocron1500) +
tm_borders(col = "black") +
tm_layout(title = "1500")
map1600 <- tm_shape(geocron1600) +
tm_borders(col = "black") +
tm_layout(title = "1600")
map1700 <- tm_shape(geocron1700) +
tm_borders(col = "black") +
tm_layout(title = "1700")
pdf("/Users/xsunde/Dropbox/Governance thro history/Evaluation/maps.pdf")
map1500
map1600
map1700
dev.off()
rm(list=ls(all=TRUE))
library(tidyverse)
library(sp)
library(rgdal)
library(tmap)
library(gdistance)
lambertequalarea <- CRS("+init=EPSG:4")
crs.longlat <- CRS("+init=EPSG:4326")
geocron1500 <- readOGR(dsn = "/Users/xsunde/Dropbox/Governance thro history/Combined_Euratlas_Geacron_Data/", layer = "1500")
geocron1600 <- readOGR(dsn = "/Users/xsunde/Dropbox/Governance thro history/Combined_Euratlas_Geacron_Data/", layer = "1600")
geocron1700 <- readOGR(dsn = "/Users/xsunde/Dropbox/Governance thro history/Combined_Euratlas_Geacron_Data/", layer = "1700")
df.geo.1500 <- as.data.frame(geocron1500) %>%
mutate(km2_mill = area(geocron1500) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1500,
rank = 1:25)
df.geo.1600 <- as.data.frame(geocron1600) %>%
mutate(km2_mill = area(geocron1600) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1600,
rank = 1:26)
df.geo.1700 <- as.data.frame(geocron1700) %>%
mutate(km2_mill = area(geocron1700) / 1000000) %>%
dplyr::select(short_name, km2_mill) %>%
arrange(desc(km2_mill)) %>%
top_n(25) %>%
mutate(century = 1700,
rank = 1:25)
df.combined <- rbind(df.geo.1500, df.geo.1600, df.geo.1700) %>%
group_by(short_name) %>%
summarize(n = n(), area = mean(km2_mill))
plot(geocron1500)
rm(list=ls(all=TRUE))
library(sp)
library(rgdal)
library(raster)
library(rgeos)
library(maptools)
library(gdistance)
library(fields)
library(tidyr)
library(FastKNN)
library(ggplot2)
library(rasterVis)
library(dplyr)
library(data.table)
library(purrr)
library(SDMTools)
library(deming)
library(maps)
library(sf)
require(tmaptools)
library(rmapshaper)
setwd("/Users/xsunde/Dropbox/Jupter/Stathelp/data/GIS")
geocron1500 <- readOGR(dsn = "ne_50m_admin_0_countries/", layer = "ne_50m_admin_0_countries")
worldmap <- readOGR(dsn = "ne_50m_admin_0_countries", layer = "ne_50m_admin_0_countries")
setwd("/Users/xsunde/Dropbox/Jupter/Stathelp/data/GIS")
setwd("/Users/xsunde/Dropbox/Jupyter/Stathelp/data/GIS")
worldmap <- readOGR(dsn = "ne_50m_admin_0_countries", layer = "ne_50m_admin_0_countries")
plot(worldmap)
CRS(worldmap)
proj4string(worldmap)
source('~/.active-rstudio-document')
worldmap <- readOGR(dsn = "ne_50m_admin_0_countries", layer = "ne_50m_admin_0_countries")
lambert_europe <- spTransform(worldmap, CRS('+init=epsg:102014'))
CRS(worldmap) <- '+init=epsg:3006'
CRS(worldmap) <- CRS("+proj=longlat +datum=WGS84")
crs(worldmap) <- CRS("+proj=longlat +datum=WGS84")
plot(worldmap)
lambert_europe <- spTransform(worldmap, CRS('+init=epsg:102014'))
crs(worldmap)
proj4string(worldmap)
worldmap <- readOGR(dsn = "ne_50m_admin_0_countries", layer = "ne_50m_admin_0_countries")
proj4string(worldmap)
lambert_europe <- spTransform(worldmap, CRS('+init=epsg:3006'))
worldmap <- readOGR(dsn = "ne_50m_admin_0_countries", layer = "ne_50m_admin_0_countries")
crs(worldmap) <- CRS("+proj=longlat +datum=WGS84")
lambert_europe <- spTransform(worldmap, CRS('+init=epsg:3006'))
lambert_europe <- spTransform(worldmap, CRS('+init=epsg:3785'))
plot(lambert_europe)
us_national_atlas <- spTransform(worldmap, CRS('+init=epsg:2163'))
plot(us_national_atlas)
proj4string(us_national_atlas)
europe_laea <- spTransform(worldmap, CRS('+init=epsg:3035'))
plot(europe_laea)
help(writeOGR)
writeOGR(us_national_atlas, ".", "shapefile_us_national_atlas", driver="ESRI Shapefile")
writeOGR(europe_laea, "proj_eu", "europe_laea", driver="ESRI Shapefile")
stereo <- spTransform(worldmap, CRS('+init=epsg:3995'))
plot(stereo)
proj4string(stereo) <- "+proj=igh +ellps=sphere +towgs84=0,0,0 +lon_0=100w +x_0=-11119487.43"
stereo <- spTransform(worldmap, CRS('+proj=igh +ellps=sphere +towgs84=0,0,0 +lon_0=100w +x_0=-11119487.43'))
plot(stereo)
plot(us_national_atlas)
help(rm(list=ls(all=TRUE)))
library(sp)
library(rgdal)
library(raster)
library(rgeos)
library(maptools)
library(gdistance)
library(fields)
library(tidyr)
library(FastKNN)
library(ggplot2)
library(rasterVis)
library(dplyr)
library(data.table)
library(purrr)
library(SDMTools)
library(deming)
library(maps)
library(sf)
require(tmaptools)
library(rmapshaper)
setwd("/Users/xsunde/Dropbox/Jupyter/Stathelp/data/GIS")
# Define clipping function
gClip <- function(shp, bb){
if(class(bb) == "matrix") b_poly <- as(extent(as.vector(t(bb))), "SpatialPolygons")
else b_poly <- as(extent(bb), "SpatialPolygons")
gIntersection(shp, b_poly, byid = T)
}
# Load worldmap and set CRS
worldmap <- readOGR(dsn = "ne_50m_admin_0_countries", layer = "ne_50m_admin_0_countries")
worldmap <- worldmap[worldmap$SOVEREIGNT != "Antarctica", ]
worldmap_condensed <- worldmap[, c("SOVEREIGNT", "ADMIN")]
bbox(worldmap)
glimpse(worldmap)
# EUROPE
b_europe <- matrix(c(-25, 35, 45,72), nrow=2, ncol=2)
clip_europe <- gClip(worldmap, b_europe)
mercator_europe <- spTransform(clip_europe, CRS('+init=EPSG:3395'))
lambert_europe <- spTransform(clip_europe, CRS('+init=ESRI:102014'))
cliplist_europe <- over(worldmap, clip_europe)
# SOUTH AMERICA
b_sa <- matrix(c(-86.5,-58.2,-29.0,15.4), nrow=2, ncol=2)
clip_sa <- gClip(worldmap, b_sa)
mercator_sa <- spTransform(clip_sa, CRS('+init=EPSG:3395'))
cliplist_sa <- over(worldmap, clip_sa)
## NORTH AMERICA
b_na <- matrix(c(-168.7,6.1,-49.4,72.3), nrow=2, ncol=2)
clip_na <- gClip(worldmap, b_na)
mercator_na <- spTransform(clip_na, CRS('+init=EPSG:3395'))
lambert_na <- spTransform(clip_na, CRS('+init=EPSG:3347'))
cliplist_na <- over(worldmap, clip_na)
## AFRICA
b_afr <- matrix(c(-19.6,-36.4,63.8,40.5), nrow=2, ncol=2)
clip_afr <- gClip(worldmap, b_afr)
mercator_afr <- spTransform(clip_afr, CRS('+init=EPSG:3395'))
plot(mercator_afr)
cliplist_afr <- over(worldmap, clip_afr)
## ASIA
b_asia <- matrix(c(52.3,-11.3,154.9,57.1), nrow=2, ncol=2)
clip_asia <- gClip(worldmap, b_asia)
mercator_asia <- spTransform(clip_asia, CRS('+init=EPSG:3395'))
plot(mercator_asia)
cliplist_asia <- over(worldmap, clip_asia)
# EXPORTING
data_na <- as.data.frame(worldmap[is.na(cliplist_na)==FALSE,c("SOVEREIGNT", "ADMIN")])
pid <- sapply(slot(lambert_na, "polygons"), function(x) slot(x, "ID"))
p.df <- data.frame( ID=1:length(lambert_na), row.names = pid)
data_na <- as.data.frame(worldmap[is.na(cliplist_na)==FALSE,c("SOVEREIGNT", "ADMIN")])
pid <- sapply(slot(lambert_na, "polygons"), function(x) slot(x, "ID"))
p.df <- data.frame( ID=1:length(lambert_na), row.names = pid)
spdf_na <- SpatialPolygonsDataFrame(lambert_na, p.df, match.ID=TRUE)
spdf_na$SOVEREIGNT <- data_europe$SOVEREIGNT
spdf_na$ADMIN <- data_europe$ADMIN
writeOGR(spdf_na, "projections", "lambert_na", driver="ESRI Shapefile")
data_na <- as.data.frame(worldmap[is.na(cliplist_na)==FALSE,c("SOVEREIGNT", "ADMIN")])
pid <- sapply(slot(lambert_na, "polygons"), function(x) slot(x, "ID"))
p.df <- data.frame( ID=1:length(lambert_na), row.names = pid)
spdf_na <- SpatialPolygonsDataFrame(lambert_na, p.df, match.ID=TRUE)
spdf_na$SOVEREIGNT <- data_na$SOVEREIGNT
spdf_na$ADMIN <- data_na$ADMIN
writeOGR(spdf_na, "projections", "lambert_na", driver="ESRI Shapefile")
data_na <- as.data.frame(worldmap[is.na(cliplist_na)==FALSE,c("SOVEREIGNT", "ADMIN")])
pid <- sapply(slot(lambert_na, "polygons"), function(x) slot(x, "ID"))
p.df <- data.frame( ID=1:length(lambert_na), row.names = pid)
spdf_na <- SpatialPolygonsDataFrame(lambert_na, p.df, match.ID=TRUE)
spdf_na$SOVEREIGNT <- data_na$SOVEREIGNT
spdf_na$ADMIN <- data_na$ADMIN
writeOGR(spdf_na, "projections", "lambert_na", driver="ESRI Shapefile")
data_na <- as.data.frame(worldmap[is.na(cliplist_na)==FALSE,c("SOVEREIGNT", "ADMIN")])
pid <- sapply(slot(mercator_na, "polygons"), function(x) slot(x, "ID"))
p.df <- data.frame( ID=1:length(mercator_na), row.names = pid)
spdf_na <- SpatialPolygonsDataFrame(mercator_na, p.df, match.ID=TRUE)
spdf_na$SOVEREIGNT <- data_na$SOVEREIGNT
spdf_na$ADMIN <- data_na$ADMIN
writeOGR(spdf_na, "projections", "mercator_na", driver="ESRI Shapefile")
# ASIA MERCATOR
data_asia <- as.data.frame(worldmap[is.na(cliplist_asia)==FALSE,c("SOVEREIGNT", "ADMIN")])
pid <- sapply(slot(mercator_asia, "polygons"), function(x) slot(x, "ID"))
p.df <- data.frame( ID=1:length(mercator_asia), row.names = pid)
spdf_asia <- SpatialPolygonsDataFrame(mercator_asia, p.df, match.ID=TRUE)
spdf_asia$SOVEREIGNT <- data_asia$SOVEREIGNT
spdf_asia$ADMIN <- data_asia$ADMIN
writeOGR(spdf_asia, "projections", "mercator_asia", driver="ESRI Shapefile")
# AFRICA MERCATOR
data_afr <- as.data.frame(worldmap[is.na(cliplist_afr)==FALSE,c("SOVEREIGNT", "ADMIN")])
pid <- sapply(slot(mercator_afr, "polygons"), function(x) slot(x, "ID"))
p.df <- data.frame( ID=1:length(mercator_afr), row.names = pid)
spdf_afr <- SpatialPolygonsDataFrame(mercator_afr, p.df, match.ID=TRUE)
spdf_afr$SOVEREIGNT <- data_afr$SOVEREIGNT
spdf_afr$ADMIN <- data_afr$ADMIN
writeOGR(spdf_afr, "projections", "mercator_afr", driver="ESRI Shapefile")
